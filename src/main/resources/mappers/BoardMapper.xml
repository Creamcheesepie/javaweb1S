<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.javaweb1S.dao.BoardDAO">
	
	<select id="getCategoryByName" resultType="int">
		select category from board2_category where name = #{categoryName};
	</select>
	
	<select id="getCategoryNameByCategory" resultType="String">
		select name from board2_category where category = #{category}; 
	</select>
	
	<select id="getCategoryList" resultType="com.spring.javaweb1S.vo.CategoryVO">
		select category,name,stat from board2_category where <![CDATA[category>2]]> and <![CDATA[category<102]]>;
	</select>
	
	<select id="getboardList" resultType="com.spring.javaweb1S.vo.BoardVO">
		select B.boa_idx,B.m_idx,M.nickName,M.name,M.mid,B.title,B.viewCnt,B.recommendCnt,B.wdate,B.ddate,B.category,C.name as categoryName from board2 B, member2 M, board2_category C where M.m_idx=B.m_idx and B.category = C.category and B.category = #{category} order by B.boa_idx desc limit #{sin}, #{pageSize};
	</select>
	
	<select id="getboardRead" resultType="com.spring.javaweb1S.vo.BoardVO">
		select B.boa_idx,B.m_idx,M.nickName,M.name,M.mid,B.title,B.content,B.viewCnt,B.recommendCnt,B.wdate,B.cdate,B.ddate,B.category,C.name as categoryName,M.level,M.speed,M.getheight,M.duration,M.photo,M.inst from board2 B, member2 M, board2_category C where M.m_idx=B.m_idx and B.category = C.category and B.boa_idx = #{boa_idx}; 
	</select>
	
	<select id="getCategorySearchList" resultType="com.spring.javaweb1S.vo.BoardVO">
		<if test='searchOption.equals("content") or searchOption.equals("title")'>
			select B.boa_idx,B.m_idx,M.nickName,M.name,M.mid,B.title,B.viewCnt,B.recommendCnt,B.wdate,B.category,C.name as categoryName from board2 B, member2 M, board2_category C where M.m_idx=B.m_idx and B.category = C.category and B.category = #{category} and ${searchOption} like concat('%',#{searchStr},'%') and ddate is null order by B.boa_idx desc limit #{sin}, #{pageSize};
		</if>
		<if test='!searchOption.equals("content") and !searchOption.equals("title")'>
			select B.boa_idx,B.m_idx,M.nickName,M.name,M.mid,B.title,B.viewCnt,B.recommendCnt,B.wdate,B.category,C.name as categoryName from board2 B, member2 M, board2_category C where M.m_idx=B.m_idx and B.category = C.category and B.category = #{category} and ${searchOption} = #{searchStr} and ddate is null order by B.boa_idx desc limit #{sin}, #{pageSize};
		</if>
	</select>
	
	<select id="getRecommendDate" resultType="String">
		select recommendDate from board2_recommend where m_idx=#{m_idx} and boa_idx = #{boa_idx};
	</select>
	
	<select id="getMaxRep_group" resultType="String">
		select max(rep_group) from board2_reply where boa_idx = #{vo.boa_idx};
	</select>
	
	<select id="getboardReplyList" resultType="com.spring.javaweb1S.vo.ReplyVO">
		select R.*,M.nickName,M.mid,M.photo from board2_reply R , member2 M where M.m_idx=R.m_idx and boa_idx = #{boa_idx} order by rep_group, rep_idx asc limit #{vo.sin},#{vo.pageSize};
	</select>
	
	<select id="getPrevNextContentbyBoa_idx" resultType="com.spring.javaweb1S.vo.BoardVO">
		select boa_idx,title from board2 where boa_idx in(
							(select boa_idx from board2 where <![CDATA[boa_idx>#{vo.boa_idx}]]> and category=#{vo.category} and ddate is null limit 1),
							(select boa_idx from board2 where <![CDATA[boa_idx<#{vo.boa_idx}]]> and category=#{vo.category} and ddate is null order by boa_idx desc limit 1));
	</select>
	
	<select id="getBoardReccomendCheck" resultType="String">
		select boa_idx from board2_recommend where boa_idx = #{boa_idx} and m_idx = #{user_m_idx};
	</select>
	
	<select id="getboardUpdateForm" resultType="com.spring.javaweb1S.vo.BoardVO">
		select boa_idx,title,content,wdate,cdate from board2 where boa_idx = #{boa_idx}; 
	</select>
	
	<select id="getNewBoardList" resultType="com.spring.javaweb1S.vo.BoardVO">
		select B.title,B.boa_idx,C.category,C.name as categoryName from board2 B, board2_category C  where B.category = C.category and <![CDATA[B.category>2]]> and <![CDATA[B.category<100]]> and B.ddate is null order by B.boa_idx desc limit 10;
	</select>
	
	<select id="getBoardCntByIdxWithLimitTime" resultType="int">
		select count(boa_idx) from board2 where m_idx = #{m_idx} and wdate between #{limitTime} and now();
	</select>
	
	
	
	<insert id="setBoardWriteInput">
		insert into board2 values(default, #{vo.m_idx},#{vo.title},#{vo.content},default,default,default,null,null,#{vo.category});
	</insert>
	
	<insert id="setRecommendInformation">
		insert into board2_recommend values(#{boa_idx},#{m_idx},default);
	</insert>
	
	<insert id="setReplyInput">
		insert into board2_reply values(default,#{vo.boa_idx},#{vo.m_idx},#{vo.content},#{vo.rep_group},#{vo.rep_level},default,null,null);
	</insert>
	
	<insert id="setAnswerReplyInput"> <!-- 상단이랑 동일한 코드로 일단은 분리하였으나 추우 합칠것! -->
		insert into board2_reply values(default,#{vo.boa_idx},#{vo.m_idx},#{vo.content},#{vo.rep_group},#{vo.rep_level},default,null,null);
	</insert>
	
	
	
	
	<update id="setViewCntUp">
		update board2 set viewCnt = viewCnt+1 where boa_idx = #{boa_idx};
	</update>
	
	<update id="setBoardRecommendUpdate">
		update board2 set recommendCnt = recommendCnt+${i} where boa_idx = #{boa_idx};
	</update>
	
	<update id="setBoardUpdateInput">
		update board2 set title = #{vo.title}, content = #{vo.content} ,cdate = now() where boa_idx = #{vo.boa_idx};
	</update>
	
	<update id="setBoardDeleteUpdate">
		update board2 set ddate=now() where boa_idx = #{boa_idx};
	</update>
	
	
	
	<delete id="setRecommendDelete">
	 delete from board2_recommend where m_idx=m_idx and boa_idx = boa_idx; 
	</delete>
	
</mapper>

