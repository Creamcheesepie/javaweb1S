<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.javaweb1S.dao.AdminDAO">
	<select id="getPointList" resultType="com.spring.javaweb1S.vo.PointVO">
		select * from pointsetter;
	</select>
	
	<select id="getcategoryList" resultType="com.spring.javaweb1S.vo.CategoryVO">
		select * from board2_category where <![CDATA[category>2]]> and <![CDATA[category<102]]>;
	</select>
	
	<select id="getMaxcategory" resultType="int">
		select Max(category) from board2_category where <![CDATA[category>2]]> and <![CDATA[category<102]]>;
	</select>
	
	<select id="getReportCategoryList" resultType="com.spring.javaweb1S.vo.ReportCategoryVO">
		select rep_category, name, tableName, idxName,selectSector from report2_category;
	</select>
	
	<select id="getReportList" resultType="com.spring.javaweb1S.vo.ReportVO">
		select
			A.rep_idx,
			B.name as category_name,
			A.title,
			A.wdate,
			C.nickName,
			A.takeSw,
			A.tdate
		from
			report2 A,
			report2_category B,
			member2 C
		where
				A.m_idx=C.m_idx
			and
				A.rep_category = B.rep_category
			<if test="rep_category>0 and afterDate.equals('') and beforeDate.equals('')">
			and	A.rep_category = #{rep_category}
			</if>
			<if test="!afterDate.equals('') and !beforeDate.equals('')">
			and	A.wdate between #{afterDate} and #{beforeDate}
			</if>
			<if test="rep_category>0 and !afterDate.equals('') and !beforeDate.equals('')">
			and	A.rep_category = #{rep_category} and A.wdate between #{afterDate} and #{beforeDate}
			</if>
		order by rep_idx desc
		limit #{pageVO.sin},#{pageVO.pageSize}
	</select>
	
	<select id="getReportByRep_idx" resultType="com.spring.javaweb1S.vo.ReportVO">
		select
		 A.* ,
		 B.nickName 
		from
			report2 A,
			member2 B
		where  
				A.m_idx = B.m_idx
			and
				A.rep_idx = #{rep_idx}
	</select>
	
	<select id="getReportCategoryByCategory" resultType="com.spring.javaweb1S.vo.ReportCategoryVO">
		select name,tableName,idxName,selectSector from Report2_category where rep_category = #{rep_category};
	</select>
	
	<select id="getExtraInformation" resultType="com.spring.javaweb1S.vo.ReportVO">
		<if test="rcVO.tableName.equals('board2')">
			select 
				A.title as reportedTitle, 
				A.content as reportedContent,
				B.nickName as reportednickName,
				B.m_idx as reported_m_idx
			from 
				board2 A,
				Member2 B  
			where 
					A.boa_idx = #{vo.reported_idx}
				and
					A.m_idx = B.m_idx
		</if>
		<if test="rcVO.tableName.equals('board2_reply')">
			select 
				A.content as reportedContent,
				B.nickName as reportednickName,
				B.m_idx as reported_m_idx
			from 
				board2_reply A,
				member2 B
			where 
					A.rep_idx = #{vo.reported_idx}
				and
					A.m_idx = B.m_idx
		</if>
		<if test="rcVO.tableNAme.equals('member2')">
			select nickName as reportednickName,m_idx as reported_m_idx from member2 where m_idx = #{vo.reported_idx}
		</if>
	</select>
	
	<select id="getAskCategoryList" resultType="com.spring.javaweb1S.vo.AskVO">
		select ask_category, name as category_name from ask2_category;
	</select>
	
	<select id="getAskList" resultType="com.spring.javaweb1S.vo.AskVO">
		select
			A.ask_idx,
			A.title,
			B.name as category_name,
			A.wdate,
			A.takeSw,
			C.nickName
		from
			Ask2 A,
			Ask2_category B,
			member2 C
		where
				A.m_idx=C.m_idx
			and
				A.ask_category = B.ask_category
			<if test="ask_category>0 and afterDate.equals('') and beforeDate.equals('')">
			and	A.ask_category = #{ask_category}
			</if>
			<if test="!afterDate.equals('') and !beforeDate.equals('')">
			and	A.wdate between #{afterDate} and #{beforeDate}
			</if>
			<if test="ask_category>0 and !afterDate.equals('') and !beforeDate.equals('')">
			and	A.ask_category = #{ask_category} and A.wdate between #{afterDate} and #{beforeDate}
			</if>
		order by ask_idx desc
		limit #{pageVO.sin},#{pageVO.pageSize}
	</select>
	
	<select id="getAskDetail" resultType="com.spring.javaweb1S.vo.AskVO">
		select
			A.*,
			B.name as category_name,
			C.nickName
		from
			ask2 A,
			ask2_category B,
			member2 C
		where
				A.ask_idx = #{ask_idx}
			and
				A.m_idx = C.m_idx
			and
				A.ask_category = B.ask_category
	</select>
	
	<select id="getRuleInfo" resultType="com.spring.javaweb1S.vo.RuleSetterVO">
		select 
			actionLimit,
			DATE_FORMAT(limitTime , '%H:%i') as limitTime,
			DATE_FORMAT(penaltyTime , '%H:%i') as penaltyTime
		from
			ruleSetter
		where
			rule_idx = #{rule_idx};
	</select>
	
	
	
	
	<insert id="setCategoryInput">
		insert board2_category values(#{maxCategory},#{categoryName},default,null,default);
	</insert>
	
	<insert id="setBanList">
		insert banList values(default, #{m_idx},#{banType},#{cdate},default,#{reason});
	</insert>
	
	
	<update id="setPointSetterUpdate">
	 update pointSetter set point = #{vo.point}, cdate = now(), c_reason = #{vo.c_reason} where part = #{vo.part};
	</update>
	
	<update id="setDelete">
		update ${tableName} set ddate=now() where ${idxName}=#{idx};
	</update>
	
	<update id="setMemberLevel">
		update member2 set level = #{level} where m_idx = #{m_idx};
	</update>
	
	<update id="setReportResultUpdate">
		update report2 set takeSw = #{takeSw}, takeContent = #{takeContent},tdate=now() where rep_idx=#{rep_idx}; 
	</update>
	
	<update id="setAskTake">
		update ask2 set takeContent = #{takeContent}, takeSw='2', tdate=now() where ask_idx = #{ask_idx};
	</update>
	
	<update id="setUpdateRuleSetterLimitOption">
		update ruleSetter set limitTime = #{strLimitTime}, actionLimit = #{actionLimit}, cdate=now() where rule_idx = #{rule_idx};
	</update>
	
	<update id="setUpdateRuleSetterPenaltyOption"> 
		update ruleSetter set penaltyTime = #{strPenaltyTime}, cdate = now() where rule_idx = #{rule_idx};
	</update>
	

</mapper>