<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.javaweb1S.dao.MemberDAO">
	
	<select id="getNickSearch" resultType="com.spring.javaweb1S.vo.MemberVO">
		select * from member2 where nickName = #{nickName};
	</select>
	
	<select id="getMidSearch" resultType="com.spring.javaweb1S.vo.MemberVO">
		select * from member2 where mid = #{mid};
	</select>
	
	<select id="getM_idxInfo" resultType="com.spring.javaweb1S.vo.MemberVO">
		select m.*,e.* from member2 m, email e where m.m_idx = e.m_idx and m.m_idx=#{m_idx};
	</select>
	
	<select id="getDomainlist" resultType="com.spring.javaweb1S.vo.DomainVO">
		select dom_idx, domain from domain;
	</select>
	
	<select id="getEmailNameSearch" resultType="com.spring.javaweb1S.vo.MemberVO">
		select m_idx from email	where dom_idx = #{dom_idx} and  emailName = #{emailName};
	</select>
	
	<select id="getDomainDom_idx" resultType="String">
		select domain from domain where dom_idx = #{dom_idx};
	</select>
	
	<select id="getPointByM_idx" resultType="int">
		select point from member2 where m_idx = #{m_idx};
	</select>

	<select id="getNickNameBym_idx" resultType="String">
		select nickName from member2 where m_idx = #{m_idx};
	</select>
	
	<select id="getMyPageBoardList" resultType="com.spring.javaweb1S.vo.BoardVO">
		select boa_idx,title,category from board2 where m_idx=#{m_idx} order by boa_idx desc limit 5;
	</select>
	
	<select id="getMyPageReplyList" resultType="com.spring.javaweb1S.vo.ReplyVO">
		select 
			A.rep_idx,
			A.content,
			A.boa_idx,
			B.category
		from
			board2_reply A,
			board2 B
		where
				A.boa_idx = B.boa_idx
			and
				A.m_idx = #{m_idx}
			and
				A.rep_level = 0
		order by A.rep_idx desc
		limit 5;
	</select>
	
	<select id="getFriendList" resultType="com.spring.javaweb1S.vo.MemberVO">
		select
			A.t_idx as m_idx,
			B.nickName,
			B.name,
			B.age,
			B.gender,
			B.level,
			B.speed,
			B.duration,
			B.getheight,
			B.birthday
		from
			friendbanList A,
			member2 B
		where
				A.m_idx = #{m_idx}
			and
				A.t_idx = B.m_idx
			and
				<![CDATA[A.status<3]]>
		order by A.setDate desc
		limit #{vo.sin},#{vo.pageSize}
	</select>
	
	<select id="getMemberSearchForFriendAdd" resultType="com.spring.javaweb1S.vo.MemberVO">
		select 
			A.m_idx,
			A.nickName,
			A.name,
			A.mid,
			A.duration,
			A.speed,
			A.getheight,
			A.level,
			B.status 
		from 
			member2 as A 
			left join friendBanList as B
			on A.m_idx = B.t_idx
		where 
			not	
				A.m_idx 
			in 
				(#{m_idx})
			and
				A.${searchOption} 
			like 
				concat('%',#{searchStr},'%');
	</select>
	
	<select id="getBanList" resultType="com.spring.javaweb1S.vo.MemberVO">
		select
			A.t_idx as m_idx,
			B.nickName,
			B.mid,
			A.extra,
			A.setDate
		from
			friendbanList A,
			member2 B
		where
				A.m_idx = #{m_idx}
			and
				A.t_idx = B.m_idx
			and
				<![CDATA[A.status>2]]>
		order by A.setDate desc
		limit #{vo.sin}, #{vo.pageSize}
	</select>
	
	<select id="getFrienStatus" resultType="int">
		select status from friendbanList where m_idx = #{m_idx} and t_idx = #{t_idx};
	</select>

	<select id="getMyMessageList" resultType="com.spring.javaweb1S.vo.MessageVO">
		select
			A.msg_idx, 
			A.title,
			A.m_idx,
			A.receive_m_idx,
			B.nickName,
			A.sdate,
			A.readSw,
			A.msg_category
		from 
			message2 A, member2 B 
		where
			(A.receive_m_idx=B.m_idx and A.m_idx=#{m_idx})
			or
			(A.m_idx=B.m_idx and A.receive_m_idx=#{m_idx})
		order by A.msg_idx desc limit 5; 
	</select>
	
		<select id="getMyPageFriendList" resultType="com.spring.javaweb1S.vo.MemberVO">
		select
			A.t_idx as m_idx,
			B.nickName,
			B.name,
			B.age,
			B.gender,
			B.level,
			B.speed,
			B.duration,
			B.getheight,
			B.birthday
		from
			friendbanList A,
			member2 B
		where
				A.m_idx = #{m_idx}
			and
				A.t_idx = B.m_idx
			and
				<![CDATA[A.status<3]]>
		order by A.setDate desc
		limit 5
	</select>
	
	<select id="getMyPageBanList" resultType="com.spring.javaweb1S.vo.MemberVO">
		select
			A.t_idx as m_idx,
			B.nickName,
			B.mid,
			A.extra,
			A.setDate
		from
			friendbanList A,
			member2 B
		where
				A.m_idx = #{m_idx}
			and
				A.t_idx = B.m_idx
			and
				<![CDATA[A.status>2]]>
		order by A.setDate desc
		limit 5
	</select>
	
	<select id="getEmailCheck" resultType="String">
		select emailName from email where emailName = #{emailName} and dom_idx = #{dom_idx};
	</select>
	
	<select id="getMidFind" resultType="String">
		select mid from member2 where m_idx = (select m_idx from email where emailName=#{emailName} and dom_idx = #{dom_idx});
	</select>
	
	<select id="getM_idxByMid" resultType="int">
		select m_idx from member2 where mid = #{mid};
	</select>
	
	<select id="getMostBoardMember" resultType="com.spring.javaweb1S.vo.MemberVO">
		select count(B.boa_idx) as boaCnt,
					 A.nickName,
					 A.m_idx
		from member2 A,
				 board2 B
		where A.m_idx = B.m_idx
			and B.wdate between date_sub(now(), interval 1 month)
											and	now()
		group by A.m_idx
		order by boaCnt desc
		limit 5;
	</select>
	
	<select id="getMostReplyMember" resultType="com.spring.javaweb1S.vo.MemberVO">
		select count(B.rep_idx) as repCnt,
					 A.nickName,
					 A.m_idx
		from member2 A,
				 board2_reply B
		where A.m_idx = B.m_idx 
			and B.wdate between date_sub(now(), interval 1 month)
											and	now()
		group by A.m_idx
		order by repCnt desc
		limit 5;
	</select>
	
	<select id="getBadUserCdateByM_idx" resultType="String">
		select cdate
		from banList
		where m_idx = #{m_idx}
			and	banType= '3_tempBan'
			and cdate between now
										and date_add(now(), interval 10 year)
		limit 1;
	</select>
	
	


	<insert id="setMemberSignIn">
		insert into member2 values(default, #{vo.mid},#{vo.pwd},#{vo.nickName},#{vo.name},#{vo.tel},#{vo.address},#{vo.age},#{vo.gender},#{vo.birthday},#{vo.inst},#{vo.photo},default,default,#{vo.speed},#{vo.duration},#{vo.getHeight},default,default,default,default,default,default,#{vo.QRcode});
	</insert>
	
	<insert id="setEmailInput">
		insert into email values ((select m_idx from member2 where mid=#{vo.mid}),#{vo.emailName},#{vo.dom_idx},null);
	</insert>
	
	
	
	
	
	<update id="setLoginFirstSetting">
	 	update member2 set point=#{point},totalCnt=#{totalCnt},todayCnt=#{todayCnt},lastVisit = now() where m_idx=#{m_idx};
	</update>
	
	<update id="setLoginSetting">
		update member2 set todayCnt=#{todayCnt},lastVisit = now() where m_idx=#{m_idx};
	</update>
	
	<update id="setMemberNickNameUpdate">
		update member2 set nickName=#{vo.nickName} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberNameUpdate">
		update member2 set name=#{vo.name} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberAgeUpdate">
		update member2 set age=#{vo.age} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberGenderUpdate">
		update member2 set gender=#{vo.gender} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberEmailUpdate">
		update email set emailName=#{vo.emailName},dom_idx=#{vo.dom_idx} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberTelUpdate">
		update member2 set tel = #{vo.tel} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberbirthdayUpdate">
		update member2 set birthday = #{vo.birthday} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberInstUpdate">
		update member2 set inst = #{vo.inst} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberAddressUpdate">
		update member2 set address = #{vo.address} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberPhotoUpdate">
		update member2 set photo = #{sfName} where m_idx = #{m_idx};
	</update>
	
	<update id="setMemberPwdUpdate">
		update member2 set pwd = #{vo.pwd} where m_idx = #{vo.m_idx};
	</update>
	
	<update id="setMemberLevelUpdate">
		update member2 set level = #{level} where m_idx = #{m_idx};
	</update>
	
	<update id="setRideInfoUpdate">
		update member2 set speed = #{vo.speed}, getHeight = #{vo.getHeight}, duration = #{vo.duration} where m_idx = #{m_idx};
	</update>
	
	
	
	<delete id="setFriendBanDelete">
		delete from friendbanList where m_idx = #{m_idx}  and t_idx = #{t_idx};
	</delete>

</mapper>
