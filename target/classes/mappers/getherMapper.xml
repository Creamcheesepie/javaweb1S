<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.javaweb1S.dao.GetherDAO">
	<select id="getAfterGetherList" resultType="com.spring.javaweb1S.vo.GetherVO">
		select
			A.get_idx,
			A.title,
			A.detailCourse,
			A.location,
			A.getherTime,
			A.totalMember,
			A.nowMember,
			B.nickName,
			B.name,
			(select m_idx from gether2_member where get_idx = A.get_idx and m_idx = #{m_idx}) as joined
		from
			gether2 A,
			member2 B
		where
				A.getherTime
			between
				now()
			and
				date_add(now(),interval 1 Year)
			and
				A.m_idx = B.m_idx
		order by A.getherTime
		limit #{vo.sin}, #{vo.pageSize};
	</select>
	
	<select id="getPastGetherList" resultType="com.spring.javaweb1S.vo.GetherVO">
		select
			A.get_idx,
			A.title,
			A.detailCourse,
			A.location,
			A.getherTime,
			A.totalMember,
			A.nowMember,
			B.nickName,
			B.name,
			(select m_idx from gether2_member where get_idx = A.get_idx and m_idx = #{m_idx}) as joined
		from
			gether2 A,
			member2 B
		where
				A.getherTime
			between
				date_sub(now(),interval 1 Year)
			and
				now()
			and
				A.m_idx = B.m_idx
		order by A.getherTime
		limit #{vo.sin}, #{vo.pageSize};
	</select>
	
	<select id="getAvailableGetherCount" resultType="int">
		select count(get_idx) from gether2 where getherTime between now() and date_add(now(),interval 1 Year);
	</select>
	
	<select id="getGetherDetail" resultType="com.spring.javaweb1S.vo.GetherVO">
		select
			A.get_idx,
			A.m_idx,
			A.title,
			A.content,
			A.location,
			A.getherType,
			A.totalMember,
			A.nowMember,
			A.gpxfile,
			A.useTime,
			A.distance,
			A.getHeight,
			A.detailCourse,
			A.getherTime,
			A.wdate,
			B.nickName,
			B.name
		from
			gether2 A,
			member2 B
		where
				A.get_idx = #{get_idx}
			and
				A.m_idx = B.m_idx
	</select>
	
	<select id="getGetherJoinList" resultType="com.spring.javaweb1S.vo.GetherVO">
		select
			A.m_idx,
			B.nickName
		from
			gether2_member A,
			member2 B
		where
				A.get_idx = #{get_idx}
			and
				A.m_idx = B.m_idx		
	</select>
	
	<select id="getBanUserList" resultType="com.spring.javaweb1S.vo.GetherVO">
		select t_idx as m_idx from	friendbanList	where	m_idx = #{m_idx} and status='3';
	</select>
	
	<select id="getNaBanUserList" resultType="com.spring.javaweb1S.vo.GetherVO">
		select m_idx from friendbanList where t_idx = #{m_idx} and status='3';
	</select>
	
	<select id="getGetherDate" resultType="String">
		select join_date from gether2_member where get_idx = #{get_idx} and m_idx = #{m_idx};
	</select>
	
	<select id="getMyClearList" resultType="com.spring.javaweb1S.vo.GetherVO">
		select
			B.get_idx,
			B.title,
			B.location,
			B.detailCourse,
			B.getherTime,
			A.Clear,
			A.speed,
			A.distance,
			A.getHeight
		from
			gether2_member A,
			gether2 B
		where
				A.m_idx = ${m_idx}
			and
				A.get_idx = B.get_idx
			and
				A.clear <![CDATA[>]]> 0
		order by A.join_date desc
	</select>
	
	<select id="getGetherIdx" resultType="int">
		select get_idx from gether2 where m_idx = #{vo.m_idx} and title=#{vo.title} order by wdate desc limit 1;
	</select>
	
	<select id="getGetherClearList" resultType="com.spring.javaweb1S.vo.GetherMemberVO">
		select
			A.get_idx,
			A.m_idx,
			A.speed,
			A.distance,
			A.getHeight,
			A.clear,
			B.nickName
		from
			gether2_member A,
			member2 B
		where
				A.get_idx = #{get_idx}
			and
				A.m_idx = B.m_idx
	</select>
	
	<select id="getGetherMemberDetail" resultType="com.spring.javaweb1S.vo.GetherMemberVO">
		select
			A.*,
			B.nickName
		from
			gether2_member A,
			member2 B
		where
				A.get_idx = #{get_idx}
			and
				A.m_idx	= #{m_idx}
			and
				A.m_idx = B.m_idx
	</select>
	
	<select id="getGetherReviewList" resultType="com.spring.javaweb1S.vo.GetherReviewVO">
		select
			A.title,
			A.ger_idx,
			A.get_title,
			A.get_idx,
			A.mainImage,
			B.nickName,
			A.clear
		from
			gether2_review A,
			member2 B
		where
			A.m_idx=B.m_idx
		order by A.ger_idx desc;
	</select>
	
	<select id="getGetherFrontReviewList" resultType="com.spring.javaweb1S.vo.GetherReviewVO">
		select
			A.title,
			A.ger_idx,
			A.get_title,
			A.get_idx,
			A.mainImage,
			B.nickName,
			A.clear
		from
			gether2_review A,
			member2 B
		where
			A.m_idx=B.m_idx
		order by A.ger_idx desc
		limit 5;
	</select>
	
	<select id="getGetherReviewDetail" resultType="com.spring.javaweb1S.vo.GetherReviewVO">
		select
			A.*,
			B.nickName
		from
			gether2_review A,
			member2 B
		where
				A.ger_idx = #{ger_idx}
			and 
				A.m_idx=B.m_idx
	</select>
	
	<select id="getLongestRider" resultType="com.spring.javaweb1S.vo.GetherMemberVO">
		select
			B.nickName,
			sum(A.distance) as distance
		from
			gether2_member A,
			member2 B,
			gether2 C
		where
				A.m_idx = B.m_idx
			and
				A.get_idx = C.get_idx
			and
				C.getherTime
			between
				last_day(now() - interval 2 month) + interval 1 day
			and
				last_day(now() - interval 1 month)
			order by distance desc
		limit 1;	
	</select>
	
	<select id="getFastestRider" resultType="com.spring.javaweb1S.vo.GetherMemberVO">
		select
			B.nickName,
			sum(A.speed) as speed,
			A.m_idx
		from
			gether2_member A,
			member2 B,
			gether2 C
		where
				A.m_idx = B.m_idx
			and
				A.get_idx = C.get_idx
			and
				C.getherTime
			between
				last_day(now() - interval 2 month) + interval 1 day
			and
				last_day(now() - interval 1 month)
			order by speed desc
		limit 1;	
	</select>
	
	<select id="getGetherMemberM_idxCnt" resultType="int">
		select	count(m_idx) from gether2_member where m_idx = #{m_idx} and clear>2;
	</select>
	
	<select id="gethighestRider" resultType="com.spring.javaweb1S.vo.GetherMemberVO">
		select
			B.nickName,
			A.getHeight
		from
			gether2_member A,
			member2 B,
			gether2 C
		where
				A.m_idx = B.m_idx
			and
				A.get_idx = C.get_idx
			and
				C.getherTime
			between
				last_day(now() - interval 2 month) + interval 1 day
			and
				last_day(now() - interval 1 month)	
		order by getHeight desc
		limit 1;
	</select>
	
	<insert id="setGetherInsert">
		insert into gether2 values(default,#{vo.m_idx},#{vo.title},#{vo.content},#{vo.location},#{vo.getherType},#{vo.totalMember},default,#{vo.gpxFile},#{vo.useTime},#{vo.distance},#{vo.getHeight},#{vo.detailCourse},#{vo.getherTime},default,null,null);
	</insert>
	
	<insert id="setGetherJoin">
		insert into gether2_member values(#{get_idx}, #{m_idx},default,null,null,null,default);
	</insert>
	
	<insert id="setSendAlertMessage">
		insert into message2 values(default,'1',#{m_idx},'차단한 회원 활동 알림','회원님이 차단한 회원이 회원님이 등록한 모임에 참여하였습니다. 확인해 주십시오.',default,null,null,'2',null);	
	</insert>

	<insert id="setGetherReviewInsert">
		insert into gether2_review values(default,#{vo.get_title},#{vo.get_idx},#{vo.m_idx},#{vo.title},#{vo.content},#{vo.mainImage},#{vo.speed},#{vo.getHeight},#{vo.distance},#{vo.clear});
	</insert>




	<update id="setUpdateNowMemberGether">
		update gether2 set nowMember = nowMember+${i} where get_idx = #{get_idx};
	</update>
	
	<update id="setGetherClearUpdate">
		update gether2_member set speed = #{vo.speed}, distance=#{vo.distance},getHeight=#{vo.getHeight},clear=#{vo.clear} where get_idx=#{vo.get_idx} and m_idx = #{vo.m_idx};
	</update>
	
	<update id="setGetherClearCheck">
		update gether2_member set clear = clear+2 where get_idx = #{get_idx} and m_idx = #{m_idx};
	</update>
	
	
	
	
	
	<delete id="setDeleteGether2_member">
		delete from gether2_member where get_idx = #{get_idx} and m_idx = #{m_idx};
	</delete>
</mapper>